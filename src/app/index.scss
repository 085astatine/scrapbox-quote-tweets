@use 'sass:map';
@use '~/lib/component/x-icon';

$prefix: '' !default;
$bs-prefix: bs- !default;
$bs-spacer: 1rem !default;
$bs-spacers: (
  0: 0,
  1: $bs-spacer * 0.25,
  2: $bs-spacer * 0.5,
  3: $bs-spacer,
  4: $bs-spacer * 1.5,
  5: $bs-spacer * 3,
);
$header-font-sizes: (
  1: 2.5rem,
  2: 2rem,
  3: 1.75rem,
);
$bs-body-bg: var(--#{$bs-prefix}body-bg);
$tab-border-color: var(--#{$bs-prefix}border-color);
$tab-border-hover-color: var(--#{$bs-prefix}secondary-bg);
$tab-border-width: var(--#{$bs-prefix}border-width);
$tab-border-style: var(--#{$bs-prefix}border-style);
$focus-visible-outline: var(--#{$bs-prefix}primary) solid 1px;

@keyframes #{$prefix}fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-in {
  animation: #{$prefix}fade-in 0.2s;
}

.button {
  padding: 0.375rem 0.75rem;
  color: var(--#{bs-prefix}black);
  background-color: var(--#{$bs-prefix}body-bg);
  border-color: var(--#{$bs-prefix}border-color);
  border-style: solid;
  border-width: var(--#{$bs-prefix}border-width);
  border-radius: var(--#{$bs-prefix}border-radius);
  transition-timing-function: ease-in-out;
  transition-duration: 0.15s;
  transition-property: box-shadow, outline;

  &:disabled {
    opacity: 0.65;
  }

  &:is(:focus, :hover) {
    box-shadow: 0 0 0 var(--#{$bs-prefix}focus-ring-width)
      rgba(
        var(--#{$bs-prefix}primary-rgb),
        var(--#{$bs-prefix}focus-ring-opacity)
      );
  }

  &:focus-visible {
    outline: $focus-visible-outline;
  }
}

.button-primary {
  color: #fff;
  background-color: var(--#{$bs-prefix}primary);
  border-color: var(--#{$bs-prefix}primary);

  &:is(:focus, :hover) {
    box-shadow: 0 0 0 var(--#{$bs-prefix}focus-ring-width)
      rgba(
        var(--#{$bs-prefix}primary-rgb),
        var(--#{$bs-prefix}focus-ring-opacity)
      );
  }
}

.button-secondary {
  color: #fff;
  background-color: var(--#{$bs-prefix}secondary);
  border-color: var(--#{$bs-prefix}secondary);

  &:is(:focus, :hover) {
    box-shadow: 0 0 0 var(--#{$bs-prefix}focus-ring-width)
      rgba(
        var(--#{$bs-prefix}secondary-rgb),
        var(--#{$bs-prefix}focus-ring-opacity)
      );
  }
}

.button-outline-secondary {
  color: var(--#{$bs-prefix}secondary);
  background-color: var(--#{$bs-prefix}white);
  border-color: var(--#{$bs-prefix}secondary);
  transition-property: background-color, box-shadow, color, outline;

  &:is(:focus, :hover) {
    color: var(--#{$bs-prefix}white);
    background-color: var(--#{$bs-prefix}secondary);
    box-shadow: 0 0 0 var(--#{$bs-prefix}focus-ring-width)
      rgba(
        var(--#{$bs-prefix}secondary-rgb),
        var(--#{$bs-prefix}focus-ring-opacity)
      );
  }
}

.icon-button {
  display: flex;
  column-gap: map.get($bs-spacers, 1);
  align-items: center;

  .icon {
    width: 1.5em;
    height: 1.5em;
  }
}

.button-group-vertical {
  display: flex;
  flex-direction: column;
  row-gap: var(--#{$bs-prefix}border-width);

  > .button:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  > .button:not(:last-child) {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.checkbox {
  display: flex;
  flex-shrink: 0;
  width: 1.5em;
  height: 1.5em;
  padding: 0;
  margin: 0;
  color: var(--#{$bs-prefix}secondary);
  cursor: pointer;
  background-color: var(--#{$bs-prefix}body-bg);
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 0.25rem;
  transition:
    opacity 0.15s ease,
    color 0.15s ease-in-out,
    background-color 0.15s ease-in-out,
    border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;

  &.checked {
    color: var(--#{$bs-prefix}body-bg);
    background-color: var(--#{$bs-prefix}primary);
  }

  &.disabled {
    cursor: default;
    opacity: 0.5;
  }

  .icon {
    width: calc(1.5em - 2px);
    height: calc(1.5em - 2px);
    margin: auto;
  }

  &:focus {
    box-shadow: 0 0 0 0.25rem rgba(var(--#{$bs-prefix}primary-rgb), 0.25);
  }

  &:focus-visible {
    outline: $focus-visible-outline;
  }
}

.floating-menu {
  z-index: 100;
  background-color: var(--#{$bs-prefix}body-bg);
  border-color: var(--#{$bs-prefix}border-color);
  border-style: var(--#{$bs-prefix}border-style);
  border-width: var(--#{$bs-prefix}border-width);
  border-radius: var(--#{$bs-prefix}border-radius);
}

.commands {
  display: flex;
  flex-wrap: wrap;
  gap: map.get($bs-spacers, 1);
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 1);
  border-color: var(--#{$bs-prefix}border-color);
  border-style: var(--#{$bs-prefix}border-style);
  border-width: var(--#{$bs-prefix}border-width);
  border-radius: var(--#{$bs-prefix}border-radius);

  > .command {
    flex-grow: 1;

    > .icon {
      width: 2em;
      height: 2em;
    }
  }
}

.tabs {
  display: flex;
  gap: calc(2 * $tab-border-width);
  margin-top: map.get($bs-spacers, 1);
  border-bottom: $tab-border-width $tab-border-style $tab-border-color;

  .tab {
    flex-grow: 1;
    padding: 0.375rem 0.75rem;
    margin-bottom: calc(-1 * $tab-border-width);
    color: var(--#{$bs-prefix}link-color);
    text-align: center;
    cursor: pointer;
    background-color: transparent;
    border: $tab-border-width $tab-border-style transparent;
    border-top-left-radius: var(--#{$bs-prefix}border-radius);
    border-top-right-radius: var(--#{$bs-prefix}border-radius);
    transition:
      color 0.15s ease-in-out,
      border-color 0.15s ease-in-out;

    &:hover {
      border-color: $tab-border-hover-color $tab-border-hover-color
        $tab-border-color;
    }

    &:focus-visible {
      outline: $focus-visible-outline;
    }

    &.active {
      color: var(--#{$bs-prefix}emphasis-color);
      cursor: auto;
      border-color: $tab-border-color $tab-border-color $bs-body-bg;
    }

    .icon {
      width: 2em;
      height: 2em;
    }
  }
}

.tab-content {
  display: flex;
  flex-grow: 1;
  flex-shrink: 1;
  flex-direction: column;
  margin-bottom: map.get($bs-spacers, 1);
  overflow-y: hidden;
  border-color: transparent $tab-border-color $tab-border-color;
  border-style: $tab-border-style;
  border-width: $tab-border-width;
  border-bottom-right-radius: var(--#{$bs-prefix}border-radius);
  border-bottom-left-radius: var(--#{$bs-prefix}border-radius);
}

.toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  .tool {
    display: flex;
    gap: map.get($bs-spacers, 2);
    align-items: center;

    .tool-label {
      margin: 0;
      font-weight: normal;
      white-space: nowrap;

      &.disabled {
        opacity: 0.5;
      }
    }
  }
}

.cosense-icon {
  > img {
    width: 100%;
    height: 100%;
  }
}

.tweet {
  border-color: var(--#{$bs-prefix}border-color);
  border-style: var(--#{$bs-prefix}border-style);
  border-width: var(--#{$bs-prefix}border-width);
  border-radius: var(--#{$bs-prefix}border-radius);

  .header {
    display: flex;
    gap: map.get($bs-spacers, 1);
    padding: map.get($bs-spacers, 1) map.get($bs-spacers, 2);
    white-space: nowrap;
    background-color: var(--#{$bs-prefix}gray-300);

    .name {
      flex-shrink: 3;
      overflow: hidden;
      text-overflow: clip;
      color: var(--#{$bs-prefix}black);
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }

      &:focus-visible {
        color: var(--#{$bs-prefix}link-color);
        text-decoration: underline;
        outline: none;
        box-shadow: none;
      }
    }

    .username {
      flex-shrink: 1;
      overflow: hidden;
      text-overflow: clip;
      color: var(--#{$bs-prefix}gray);
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }

      &:focus-visible {
        color: var(--#{$bs-prefix}link-color);
        text-decoration: underline;
        outline: none;
        box-shadow: none;
      }
    }

    .datetime {
      flex-grow: 1;
      flex-shrink: 2;
      overflow: hidden;
      text-overflow: clip;
      color: var(--#{$bs-prefix}black);
      text-align: right;
      text-decoration: none;

      &:hover {
        text-decoration: underline;
      }

      &:focus-visible {
        color: var(--#{$bs-prefix}link-color);
        text-decoration: underline;
        outline: none;
        border-color: none;
        box-shadow: none;
      }
    }
  }

  .body {
    display: flex;
    gap: map.get($bs-spacers, 1);
    padding: map.get($bs-spacers, 1) map.get($bs-spacers, 2);

    .text {
      margin-right: auto;
      word-break: break-all;

      &.ellipsis {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      .return-icon {
        width: 1rem;
        height: 1rem;
        margin: 0.25rem;
        fill: var(--#{$bs-prefix}gray-500);
        stroke: var(--#{$bs-prefix}gray-500);
      }

      .media-icon {
        width: 1rem;
        height: 1rem;
        margin: 0.25rem;
        fill: var(--#{$bs-prefix}link-color);
        stroke: var(--#{$bs-prefix}link-color);
      }
    }

    .expand-button {
      position: relative;
      display: flex;
      flex-shrink: 0;
      width: 1.5em;
      height: 1.5em;

      .expand-button-circle {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        margin: 0;
        appearance: none;
        cursor: pointer;
        background-color: transparent;
        border-style: none;
        border-radius: 50%;
        transition: box-shadow 0.15s ease-in-out;

        &:is(:hover, :focus) {
          box-shadow: 0 0 0 var(--#{$bs-prefix}focus-ring-width)
            rgba(
              var(--#{$bs-prefix}primary-rgb),
              var(--#{$bs-prefix}focus-ring-opacity)
            );
        }

        &:focus-visible {
          outline: $focus-visible-outline;
        }
      }
      .icon {
        width: 1em;
        height: 1em;
        margin: auto;
      }
    }
  }
}

.deleted-tweets {
  .deleted-tweets-header {
    display: flex;
    justify-content: space-between;
    padding: map.get($bs-spacers, 1) map.get($bs-spacers, 2);
    margin-bottom: map.get($bs-spacers, 1);
    background-color: var(--#{$bs-prefix}gray-300);
    border-color: var(--#{$bs-prefix}border-color);
    border-style: var(--#{$bs-prefix}border-style);
    border-width: var(--#{$bs-prefix}border-width);
    border-radius: var(--#{$bs-prefix}border-radius);
  }

  .deleted-tweet {
    display: flex;
    gap: map.get($bs-spacers, 1);
    margin-left: map.get($bs-spacers, 1);

    .tweet {
      flex-grow: 1;
      overflow: hidden;
    }
  }
}

.tweets {
  display: flex;
  flex-shrink: 1;
  flex-direction: column;
  gap: map.get($bs-spacers, 1);
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 1);
  overflow-y: scroll;

  .item {
    display: flex;
    gap: map.get($bs-spacers, 1);

    .checkbox {
      margin-top: map.get($bs-spacers, 1);
    }

    .tweet {
      flex-grow: 1;
      overflow: hidden;
    }
  }
}

.deleted-tweets-list {
  display: flex;
  flex-shrink: 1;
  flex-direction: column;
  gap: map.get($bs-spacers, 1);
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 1);
  overflow-y: scroll;

  .item {
    display: flex;
    gap: map.get($bs-spacers, 1);

    .checkbox {
      margin-top: map.get($bs-spacers, 1);
    }

    .deleted-tweets {
      flex-grow: 1;
      overflow: hidden;
    }
  }
}

.settings {
  display: flex;
  flex-shrink: 1;
  flex-direction: column;
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 1);
  overflow-y: scroll;
}

.settings-editor-headerline {
  display: flex;
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 3);

  &:not(:has(> .settings-telomere)) {
    padding-left: map.get($bs-spacers, 3) + 1rem;
  }
}

@each $header, $font-size in $header-font-sizes {
  .settings-editor-header-#{$header} {
    display: flex;
    align-items: center;
    font-size: $font-size;
    line-height: 1.2;

    .expand-icon {
      width: $font-size;
      height: $font-size;
      margin-left: 1rem;
    }
  }
}

.settings-item {
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 3);
}

.settings-item-row {
  display: flex;
  flex-wrap: wrap;

  &:not(:has(> .settings-telomere)) {
    padding-left: 1rem;
  }
}

.settings-telomere {
  width: 0.5rem;
  margin-right: 0.5rem;
  background-color: transparent;

  &.updated {
    background-color: var(--#{$bs-prefix}form-valid-color);
  }

  &.invalid {
    background-color: var(--#{$bs-prefix}form-invalid-color);
  }
}

.settings-label {
  display: flex;
  align-self: center;
  margin-right: map.get($bs-spacers, 3);
  font-weight: bold;
}

.settings-form {
  display: flex;
  flex-wrap: wrap;
  column-gap: map.get($bs-spacers, 3);
  justify-content: end;
  margin-left: auto;
}

.settings-item-description {
  padding-left: map.get($bs-spacers, 3);
}

.settings-item-errors {
  padding-left: map.get($bs-spacers, 3);
  color: var(--#{$bs-prefix}form-invalid-color);
}

.settings-form-label {
  margin-bottom: 0;
  font-weight: normal;
}

.settings-select-icon {
  display: flex;
  align-items: center;

  > input[type='radio'] {
    margin-right: map.get($bs-spacers, 1);
  }

  > label {
    display: flex;
    align-items: center;
    width: 6rem;

    > .sample-icon {
      width: 2rem;
      height: auto;
      aspect-ratio: 1;
      margin-right: map.get($bs-spacers, 1);
    }
  }
}

.text-template-input {
  width: 100%;
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

.placeholders-button {
  display: flex;
  align-items: center;
  margin-left: auto;
  line-height: 1rem;

  .placeholders-button-icon {
    width: 1rem;
    height: 1rem;
    margin-left: map.get($bs-spacers, 1);
  }
}

.settings-update-notification {
  display: block;
  padding: map.get($bs-spacers, 1) map.get($bs-spacers, 2);
  color: var(--#{$bs-prefix}white);
  text-align: center;
  background-color: var(--#{$bs-prefix}primary);
  border-radius: var(--#{$bs-prefix}border-radius);

  .close {
    float: right;
    display: flex;
    align-items: center;
    justify-content: center;
    aspect-ratio: 1 / 1;
    padding: 0;
    color: inherit;
    appearance: none;
    background-color: inherit;
    border: none;
    border-radius: 50%;

    &:is(:hover, :focus) {
      background-color: var(--#{$bs-prefix}secondary);
    }

    &:focus-visible {
      outline: $focus-visible-outline;
    }
  }

  .close-icon {
    width: 1.5em;
    height: 1.5em;
  }
}

.settings-datetime-format-sample {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  padding-left: map.get($bs-spacers, 5);

  .arrow-icon {
    width: 1em;
    height: 1em;
  }
}

.clear-buttons {
  display: flex;
  gap: map.get($bs-spacers, 2);
  align-items: center;
}

.load-storage-message {
  align-self: center;
  margin-left: map.get($bs-spacers, 3);
}

.load-storage-valid {
  color: var(--#{$bs-prefix}form-valid-color);
}

.load-storage-invalid {
  color: var(--#{$bs-prefix}form-invalid-color);
}

.load-storage-error {
  margin-left: map.get($bs-spacers, 3);
  font-size: 0.875rem;
  line-height: 1;
  color: var(--#{$bs-prefix}form-invalid-color);
}

.load-storage-multiline-error {
  max-height: 10rem;
  padding: map.get($bs-spacers, 1);
  overflow: auto;
  border-color: var(--#{$bs-prefix}border-color);
  border-style: var(--#{$bs-prefix}border-style);
  border-width: var(--#{$bs-prefix}border-width);
  border-radius: var(--#{$bs-prefix}border-radius);
}
